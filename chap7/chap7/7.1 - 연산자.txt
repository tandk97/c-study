7.1 연산자
1. 대입 연산자(Assignment operator)
a. C언어에서는 = 기호로 표현
b. 변수에 상수 값 또는 다른 변수 값을 대입할 때 사용
c. C문법에서 = 는 '같다'는 뜻이 아니다.
x=3; --> x에 3을 대입한다는 뜻


2. 산술 연산자(Arithmethic operator)
상수 또는 변수 값을 이용한 산술 연산에 사용되는 연산자

+ : 더하기 연산자
- : 빼기 연산자
* : 곱하기 연산자
/ : 나눗셈의 결과 값 중 몫을 구하는 데 사용
% : 나눗셈의 결과 값 중 나머지를 구하는 데 사용


3. 증감 연산자(Increment operator)
a. ++ 증가 연산자 : 변수가 가지고 있는 값을 1증가
b. -- 감소 연산자 : 변수가 가지고 있는 값을 1감소
c. 덧셈 연산자는 이항 연산자, 두 개의 메모리가 연산에 사용됨
d. 증감 연산자는 단항 연산자, 한 개의 메모리가 연산에 사용됨
---> 단항 연산자의 연산속도가 더 빠르다.
덧셈 - ADD 명령어 / 증가 - INC 명령어

덧셈 연산자							증감 연산자
int i = 5;	/*i 값에 1을 더하고		int i = 5;
i = i+1;	다시 i에 대입됨*/			i++;	/*i값에 1증가시킴

e. 증감 연산자의 전위형과 후위형
증감 연산자는 변수의 앞뒤에 사용가능
함께 연산을 하는 다른 연산자가 있는 경우 결과 값이 달라질 수 있다.
후위형(Postfix) : 연산하고 난 뒤 값을 증감
전위형(Prefix) : 값을 먼저 증감한 뒤 연산

전위형					후위형
int i = 5, sum;			int i = 5, sum;
sum = ++i;				sum = i++;
i값이 6으로 증가한 뒤		i값을 먼저 sum에 대입한 후
sum에 대입된다.			i증가
i=6, sum=6				i=6, sum=5


4. 관계 연산자(Relational operator)
a. 두 수치 값을 비교하여 그 결과 값을 진리값(참, 거짓)으로 얻는 연산자
b. 연산의 결과가 참이면 1, 거짓이면 0

관계 연산자			연산 특성
A<B					A가 B보다 작으면 참
A<=B				A가 B보다 작거나 같으면 참
A==B				A와 B가 같으면 참
A>B					A가 B보다 크면 참
A>=B				A가 B보다 크거나 같으면 참
A!=B				A와 B가 같지 않으면 참

대입 연산자 = 과 관계 연산자 ==
= 연산자 : 대입 연산자
== 연산자 : '같다'라는 관계를 나타내는 연산자
!= 연산자 : '같지 않다'라는 관계를 나타내는 연산자


5. 논리 연산자(Logical operator)
a. A와 B의 상황을 일정한 규칙(AND, OR, NOT)으로 연결해주는 연산자
b. A와 B는 진리값을 사용함(참, 거짓)
c. 참 : 0이 아닌 모든 값(참의 대표값은 1), 거짓 : 0
d. 연산자가 많이 들어간 수식에서 논리 연산자는 문장 분리자처럼 작동

논리 연산자			연산 특성
&&					A와 B가 모두 참이어야 결과 값이 참(1), 하나라도 거짓이면 거짓(0)
||					A또는 B가 참이면 결과 값이 참(1), 둘 다 거짓일 때만 거짓(0)
!					A가 거짓이면 결과 값이 참(1), A가 참이면 결과 값이 거짓(0)

논리 연산자 특성을 이용해 조건 수식 구성하기
A, B 진리값을 사용하여 AND와 OR연산을 수행 할 때 A진리값 만으로 연산 결과를 판단할 수 있는 경우 B를 수행하지 않는다

A && B : A가 거짓이면 B와 상관없이 결과 값은 거짓
A || B : A가 참이면 B와 상관없이 결과 값은 참

data 값이 3보다 큰 경우(data==5)
data > 3 && data++;			data > 3 || data++i;
A - 참(1)	B - 수행			A - 참(1)	B - 수행X
data == 6					data == 5

data 갑이 3보다 작거나 같은 경우(data==2)
data > 3 && data++;			data > 3 || data++i;
A - 거짓(0)	B - 수행X		A - 거짓(0)	B - 수행
data == 2					data == 3

						논리곱(AND)		논리합(OR)		논리부정(NOT)
A			B			A && B			A || B			!A
거짓(0)		거짓(0)		거짓(0)			거짓(0)			참(1)
거짓(0)		참(1)		거짓(0)			참(1)			참(1)
참(1)		거짓(0)		거짓(0)			참(1)			거짓(0)
참(1)		참(1)		참(1)			참(1)			거짓(0)