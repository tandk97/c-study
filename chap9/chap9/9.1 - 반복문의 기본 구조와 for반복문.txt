9.1 반복문의 기본 구조와 for 반복문

1. 반복문(Repititive Statement)
반복문에는 3가지 조건이 필요하다.
시작 조건, 종결 조건, 조건 변화 수식
이 세가지 요소 중 1가지라도 없거나 잘못 사용한다면 반복을 하지 못하거나 무한히 반복한다.


2. for 반복문의 기본 구조
a. for 반복문의 반복의 3요소를 제일 단순하고 정확하게 표현한 반복문
b. 반복문 중 가장 많이 사용되며 시작과 끝이 명확한 반복문에 많이 사용됨

for(시작 조건; 종결 조건; 조건 변화 수식) 명령문;

1에서 5까지 숫자를 더해라
이 작업의 시작 숫자는 1이며 이 숫자는 1씩 증가 하고 5가 될 때 까지 반복 해서 이 숫자들을 더하면 됩니다.

시작 조건 : 시작 숫자는 1
조건 변화 수식 : 숫자는 1씩 증가
종결 조건 : 5가 될 때까지 반복

for(int num = 1; num <= 5; num++) sum = sum + num;
int num = 1; --- 시작 조건
num <= 5; --- 종결 조건
num++ --- 조건 변화 수식
sum = sum + num; --- 명령문


3. for 반복문의 변형과 이해
a. for 반복문에서 반복의 3요소는 사용할 필요가 없는 경우 생략 가능

/*더한 값을 저장할 sum과 합산에 사용할 숫자를 저장할 num을 선언함*/
int sum=0;, num;
for(num=1; num<=5; num++){...}

/*변수 선언 시점에  num을 초기화 함*/
int sum=0;, num=1;
for(; num<=5; num++){...}

int sum, num;/*변수 선언 시점에 sum, num을 초기화 하지 않음*/
/*반복문 시작 시점에 두 변수에 각각 값을 대입함*/
for(sum=0, num=1; num<=5; num++){...}
쉼표를 이용하여 여러 개의 변수를 초기화 할 수 있다.


4. for 반복문으로 무한 루프 만들기
a. 무한 반복문(무한 루프) : 무한히 반복하는 형태의 반복문으로 종결 조건이 없거나 항상 참이다.

int sum=0, num=1; --> 시작 조건
for(;;){
	sum=sum+num;
	num++; --> 조건 변화 수식
	if(num>5)break; --> 종결 조건
}

for 반복문 안에서 break문을 사용하면 반복문을 빠져나올 수 있다.

b. 무한 루프를 사용할 상황
종결 조건이 분명하지 않거나 종결 조건이 여러가지인 경우 사용
보통 시작과 종결을 수치로 결정할 수 없는 상황에 사용
ex) 사용자가 키보드로 특정 키를 입력하여 반복을 종료하게 하기
	파일이나 외부 장치에서 들어오는 값을 체크하여 반복을 중단하게 할 때 사용