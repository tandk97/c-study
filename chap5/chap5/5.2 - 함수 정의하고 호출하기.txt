5.2 함수 정의하고 호출하기

1. 함수 정의하기
코드를 써서 실제로 함수를 구현하는 행위
int Sum(int value1, int value2)
{
	int result = value1 + value2;
	return result;
}
보통은 반환형과 반환값의 타입이 일치하는 것이 일반적이다.
특수한 목적에 따라서는 달라질 수 있다.
a. 함수 이름 : 하는 일을 짐작하기 쉽게 짓기
b. 매개 변수 : 작업 수행에 필요한 데이터가 있다면 변수 단위로 명시
c. 작업 내용 : 작업할 내용을 중괄호 안에 명령문으로 나열
d. 반환값 : 작업한 결과 값을 반환해야 할 때 사용


2. 함수 호출하기
a. 함수가 다른 함수를 사용한다는 것 --> '함수를 호출한다.'
b. C언어 프로그램은 함수가 다른 함수를 호출하면서 프로그램을 진행
호출자(Caller) : 함수를 호출하는 함수
피호출자(Callee) : 호출되는 함수

int Sum(int value1, int value2) --> 피호출자(Callee)불리는 함수
{
	result = value1 + value2;
	return result;
}
void main() --> 호출자(Caller)부르는 함수
{
	int value = Sum(2,3);
	printf("더하기 작업의 결과는 %d\n", s);
}
함수의 호출 과정
main 함수
int a = 2, b = 3, value;
value = Sum(a,b);
main -> Sum 더하기 작업해줘 -> Sum 매개 변수 value1, value2 -> int result value1 = a value2 = b -> result 반환 -> value = Sum(a,b)


3. 함수의 매개 변수(Parameter)
매개 변수
호출자에서 전달하는 값을 피호출자에서 전달받는 변수
함수가 작업하기 위해 전달 받는 값으로 넘겨주는 값을 전달받는 변수이며 매개 변수 선언 시에는 type을 정확히 적어주어야 한다.
a. 함수 내의 선언된 변수들은 해당 함수에서만 사용 가능
b. 호출자에서 전달한 순서대로 피호출자의 매개 변수가 값을 전달 받음
c. 매개 변수의 순서와 개수가 중요하다.

함수의 매개변수가 없는 경우
특별히 호출자로부터 넘겨받을 정보가 없다면 ()안을 비워두거나 ()안에 void라고 적어 인자가 없음을 명시한다.

매개 변수가 있는 함수						매개 변수가 없는 함수
Sum(int value1, int value2)				Sum() / Sum(void)
함수이름		Sum함수의 매개변수
void -> 없다, 정확한 뜻은 정해져 있지 않다. 매개 변수가 정해져 있지 않다.


4. 반환값
a. return : 함수를 종결시키는 예약어
b. 함수의 반환값(Return value) : return 뒤에 명시된 변수와 상수
c. 함수가 값을 반환한다는 의미 : 호출자의 어떤 변수에 값을 대입
d. 함수 이름 앞에 자료형이 없는 경우 : int 자료형이 생략된 것

반환값이 없는 경우
a. 모든 함수가 반환값을 갖지는 않는다.
b. 반환할 값이 없으면 함수 이름 앞에 void 명시
c. void 형식으로 정의한 함수의 return 뒤에 반환값을 적으면 오류가 발생한다.

return 문의 또 다른 역할 : 함수를 종결하는 역할
void형 반환값을 가지는 함수를 종결할 목적으로 reutrn으르 사용할 때는 따로 반환값을 적지 않아도 오류가 발생하지 않는다.

void Test()
{
	int a = 5;
	return; /*Test 함수 정상 종료*/
	a = a + 1; /*함수가 이미 종료되어 코드가 수행되지 않음*/
}
int Sum(int value1, int value2)
{
	int result1 = value1 + value2, result2 = value1 - value2;
	return result1; /*result1 값이 반환되고 함수가 종결*/
	return result2; /*함수가 이미 종료되어 실행되지 않음*/
}


5. 함수 이름 짓는 법
변수 이름을 짓는 법과 동일하다. 함수의 이름은 함수를 구별하는 기준이 된다.