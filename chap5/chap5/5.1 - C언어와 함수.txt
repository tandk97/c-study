5.1 C언어와 함수

함수가 필요한 이유
컵을 이용해 물을 마시는 과정을 표현하면
컵을 가져온다 --> 컵에 정수기 물을 따른다 --> 물을 마신다
이 과정들을 매번 물을 마실 때마다 나열할 수는 없다.
이 명령어들을 그룹지어서 정의하는게 효율적이고 좋을 것이다.
물 마시기로 한 번에 표현해주면 표현도 간단해지고 변화가 왔을 때 대처하기가 좋아질 것이다.
하루에 물을 10번 마신다면 3가지 명령을 직접 지시한다면 총 30개의 명령을 지시해야 한다.
정수기가 고장나서 수돗물을 사용해야 한다면 정수기 부분을 수돗물로 교체해서 총 10번을 수정해 주어야 한다.
물 마시기 작업으로 정의하면 정수기 부분을 수돗물로 1번만 수정해주면 된다.

1. 함수(Function)
정해진 단위 작업을 수행하도록 명령문들을 하나의 그룹으로 묶은 것
a. 작업 별 그룹으로 나누어 소스코드를 작성하면 관리하기 편함
b. 소스 코드의 내용을 쉽게 이해 가능

물 마시기 작업의 함수 표현
{
	컵을 가져온다;
	컵에 정수기 물을 따른다;
	컵에 담긴 물을 마신다;
}

2. 함수 집합체
a. C언어로 작성한 프로그램은 함수의 집합체
b. C언어의 소스파일에는 꼭 하나 이상의 함수가 존재
c. 함수들끼리 서로 호출하여 사용하는 형태로 프로그램이 진행된다.

C 프로그램의 구조

Sum 함수	3
{
	전달 받은 값들을 더해라;	4
	더한 결과를 main 함수에게 돌려줘라;	5
}

main 함수	1
{
	더하기 작업을 하는 Sum함수를 불러라(A,B 전달);	2
	Sum 함수가 더해서 돌려준 결과 값을 출력해라;	6
}