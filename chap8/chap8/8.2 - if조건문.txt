8.2 if조건문

1. if조건문의 구조
a. 문법 구성이 간단하고 직관적인 표현을 사용하기 때문에 많이 사용됨
b. ()괄호 안에 있는 조건 수식의 결과 값이 참이면, 뒤따르는 명령문 1개를 수행
if(조건 수식) 명령문;

단일 문장을 수행하는 if 조건문
명령문1;
if(조건 수식) 명령문2;
명령문3;

순서도는 if-single_statement.png 참조
예시 코드
#include <stdio.h>

void main()
{
	int data =5;
	if(data>3) printf("data는 3보다 큰 수 입니다.\n");
	printf("작업 종료\n");
}
---> 결과 콘솔
data는 3보다 큰 수 입니다.
작업 종료
계속하려면 아무 키나 누르십시오...

복합 문장을 수행하는 if 조건문
명령문1;
if(조건 수식){
	명령문2;
	명령문3;
}
명령문4;

순서도는 if-compound_statement.png 참조
예시 코드
#include <stdio.h>

void main()
{
	int score = 92;
	char grade;
	if(score>=90){
		grade = 'A';
		printf("점수는 %d이고 등급은 %c입니다.\n", score, grade);
	}
	printf("작업 종료\n");
}
-----> 결과 콘솔
점수는 92이고 등급은 A입니다
작업 종료
계속하려면 아무 키나 누르십시오...


2. 구문 오류(Syntax Error)
프로그래밍 언어가 제공하는 규칙을 제대로 지키지 않았을 때 발생
a. 컴파일 하기 전에 비주얼 스튜디오에서 오류가 난 부분을 빨간 줄로 표시한다.
b. 컴파일 할 때 컴파일러가 체크하여 알려준다.


3. 의미상 오류(Semantic Error)
문법적으로는 맞지만 의미적으로 틀릴 때 발생
a. 의미상 오류가 발생한 상황을 '버그가 발생했다'라고 표현
b. 문법적으로 문제가 없기 때문에 컴파일러가 오류 사항을 체크하는 것이 불가능
c. 디버깅(Debugging) : 버그를 해결하기 위해 작업하는 행위

if 조건문을 사용할 때 주의 사항 - 대입 연산자와 관계 연산자의 혼동
대입 연산자를 잘못 사용한 예					올바르게 사용한 예
int data = 5;								int data = 5;
if(data=3){									if(data==3){
	data++;										data++;
}											}
|최종 데이터 값은 4|							|최종 데이터 값은 5|
---> 연산자를 잘못 사용하여 data에 3이 대입		
조건 수식의 결과는 3이 참이기 때문에 조건이
참이 되어 명령문이 실행 됨

d. 문법적 오류가 아닌 논리적 오류가 발생(Bug)발생
e. 프로그램이 실행되지만 잘못된 결과 값을 출력함


4. 오류를 줄이는 프로그래밍 습관 - 상수 우선 사용
if(3==data) ---> 관계 연산자 == 앞에 상수를 먼저 입력함
if(3=data) ---> 문법 오류가 발생 : 3은 상수이기 때문에 대입이 불가능
a. 상수를 먼저 사용하는 습관은 수치 연산 시에도 좋다
data + 4 + 7 ---> ((data+4)+7) --> 2개의 덧셈 연산으로 기계어 번역됨
4 + 7 + data ---> 11 + data ---> 1개의 덧셈 연산으로 기계어 번역됨


5. if 조건문을 사용할 때 주의 사항 - 세미콜론 오류
a. 조건문에서 ;(세미콜론)을 의도와 다르게 잘못된 위치에 사용해서 버그 발생
b. 조건 수식이 참일 때 수행할 명령문을 단일 문장으로 상ㅇ하거나 {}중괄호를 조건 수식 뒤에 바로 적는 습관 갖기

세미콜론 오류
A. 단일 문장에서 잘못 사용
int data =5;
if(data>3);
	data++;
data++은 if문과 아무런 상관이 없게 된다.

B. 복합 문장에서 잘못 사용
int data =5;
int result =0;
if(data>3);
{
	data++i;
	result=data;
}
역시 if문과 아무런 상관이 없게 된다.
보통 프로그래머가 조건을 테스트 해볼 때 긍정 테스트를 많이 하기 때문에 찾기 힘들어지게 된다.
data에 초기값이 3이 되면 A는 그대로 data에 4를 가지게 된다.
정상적인 형식은 if문에 세미콜론을 뗀 형식이고 data가 3이므로 안쪽의 명령문을 수행하지 않는다. 따라서 그대로 data는 3이 된다.